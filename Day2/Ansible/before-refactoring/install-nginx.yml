- name: This playbook will install, configure and deploy custom html page into nginx web server
  hosts: all
  vars:
    - greeting_msg: DevOps!
    - provisioner_tool: Docker
    - conf_mgr_tool: Ansible

  tasks:
    - name: install nginx web server into Ubuntu Ansible Node
      when: ( ansible_distribution == "Ubuntu" and ansible_os_family == "Debian" )
      apt: name=nginx state=latest update_cache=yes

    - name: Fix Metalink issue in CentOS Ansible Node
      when: ( ansible_distribution == "CentOS" and ansible_os_family == "RedHat" )
      copy: src=epel.repo dest=/etc/yum.repos.d/epel.repo backup=yes

    - name: install extra packages for Enterprise Linux (EPEL) in CentOS Ansible Node
      when: ( ansible_distribution == "CentOS" and ansible_os_family == "RedHat" )
      yum: name=epel-release state=latest disable_gpg_check=yes

    - name: install nginx web server into CentOS Ansible Node
      when: ( ansible_distribution == "CentOS" and ansible_os_family == "RedHat" )
      yum: name=nginx state=latest disable_gpg_check=yes

    - name: Configure nginx web root folder in ubuntu ansible node
      when: ( ansible_distribution == "Ubuntu" and ansible_os_family == "Debian" )
      copy: src=default dest=/etc/nginx/sites-available/default backup=yes
      register: copy_status

    - name: Configure nginx web root folder in CentOS ansible node
      when: ( ansible_distribution == "CentOS" and ansible_os_family == "RedHat" )
      copy: src=default.conf dest=/etc/nginx/conf.d/default.conf backup=yes
      register: copy_status

    - debug: var=copy_status

    - name: Create customized web root folder
      file: path=/var/html state=directory mode=0777

    - name: Retrieve IP Address of the ubuntu ansible node ip address
      shell: hostname -i
      register: ip_addr

    - name: Print the ip_addr of the register variable
      debug: var=ip_addr

    - name: Deploy custom html web page into nginx on ubuntu ansible node
      template: src=index.html.j2 dest=/var/html/index.html

    - name: Start nginx services on the ubuntu nodes
      #since service module has a bug related to docker, we are using command module
      #service: name=nginx state=started
      when: copy_status.changed == true
      command: service nginx restart